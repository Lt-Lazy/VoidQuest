<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Top-Down Game</title>
  <style>
    body {
        margin: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background: #e0e0e0;
    }

    #gameCanvas {
        background: #a8d0a8;
        border: 4px solid #444;
        image-rendering: pixelated;
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas"></canvas>
  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    const tileSize = 32;

    const tileImages = {
        grass: new Image(),
        tree: new Image(),
        plank: new Image(),
        wall: new Image()
    };

    tileImages.grass.src = 'images/grassTile.png';
    tileImages.tree.src = 'images/treeTile.png';
    tileImages.wall.src = 'images/brickTile.png';
    tileImages.plank.src = 'images/plankTile.png';

    const characterImages = {
        up: new Image(),
        down: new Image(),
        left: new Image(),
        right: new Image(),
    };

    characterImages.up.src = 'images/pixelmannUp.png';
    characterImages.down.src = 'images/pixelmannDown.png';
    characterImages.left.src = 'images/pixelmannLeft.png';
    characterImages.right.src = 'images/pixelmannRight.png';

    const nonWalkableTiles = ['tree', 'wall'];

    // 🎨 Lag kart med enkle bokstaver:
    const levelLayout = [
      'GGGGGGGGGGGGGGGG',
      'GGGGGGGGGGGGGGGG',
      'GGTGGGGGGGGGTGGG',
      'GGGGGGGGGGGGGGGG',
      'GGGGTGGTGGGTGGGG',
      'GGWWWGGGGGGGGGGG',
      'GWPPPWGGGGGGGGGG',
      'GWPPPWGGGGTGGGGG',
      'GWPPPWGGGGGGGGGG',
      'GWWPWWGGGGGGGGGG',
      'GGGGGGGGGGGGGGGG',
      'GGGGGGGGGGGGGGGG',
      'GGGGGGGGGGGGGGGG',

      
    ];

    const tileMapping = {
      'G': 'grass',
      'T': 'tree',
      'P': 'plank',
      'W': 'wall'
    };

    // 🔁 Konverter til map
    const map = levelLayout.map(row => row.split('').map(char => tileMapping[char]));
    const mapHeight = map.length;
    const mapWidth = map[0].length;

    canvas.width = mapWidth * tileSize;
    canvas.height = mapHeight * tileSize;

    const character = {
      x: 3,
      y: 6,
      direction: 'down'
    };

    const keys = {
      w: false,
      a: false,
      s: false,
      d: false
    };

    function drawMap() {
      for (let y = 0; y < mapHeight; y++) {
        for (let x = 0; x < mapWidth; x++) {
          const tileType = map[y][x];

          // Tegn gress først
          ctx.drawImage(tileImages.grass, x * tileSize, y * tileSize, tileSize, tileSize);

          // Hvis ikke grass, tegn oppå
          if (tileType !== 'grass') {
            const img = tileImages[tileType];
            if (img.complete) {
              ctx.drawImage(img, x * tileSize, y * tileSize, tileSize, tileSize);
            }
          }
        }
      }
    }

    function drawCharacter() {
      const img = characterImages[character.direction];
      ctx.drawImage(img, character.x * tileSize, character.y * tileSize, tileSize, tileSize);
    }

    function canMoveTo(x, y) {
      if (x < 0 || y < 0 || x >= mapWidth || y >= mapHeight) return false;
      const tile = map[y][x];
      return !nonWalkableTiles.includes(tile);
    }

    function update() {
      if (keys.w && canMoveTo(character.x, character.y - 1)) {
        character.y--;
        character.direction = 'up';
      }
      if (keys.s && canMoveTo(character.x, character.y + 1)) {
        character.y++;
        character.direction = 'down';
      }
      if (keys.a && canMoveTo(character.x - 1, character.y)) {
        character.x--;
        character.direction = 'left';
      }
      if (keys.d && canMoveTo(character.x + 1, character.y)) {
        character.x++;
        character.direction = 'right';
      }
    }

    function gameLoop() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawMap();
      drawCharacter();
    }

    document.addEventListener('keydown', (e) => {
      if (e.key in keys) {
        keys[e.key] = true;
        update();
        gameLoop();
      }
    });

    document.addEventListener('keyup', (e) => {
      if (e.key in keys) {
        keys[e.key] = false;
      }
    });

    gameLoop();
  </script>
</body>
</html>
